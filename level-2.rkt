#lang racket

(define
  level-2
  '("print(\"LEVEL 2\n\")"
    "print(\"you awake at your desk in your office. it's dark outside, it seems the building has been locked up for the night with you inside\n\")"
    "let inventory = []"
    "let whiteboard_content = \"potential vulnerabilities occur when information under the control of the user is processed wrong. that processing doesn't have to happen immediately, sometimes it's possible to give a program some information to store and then later cause it to be processed by the vulnerable part of the code. remember that two things that have the same visible effect might actually have different execution paths, one vulnerable and the other not.\""
    "print(\"> \")"
    "let input = split_on(read(), \" \")"
    "if !input! == []:"
    " goto 4"
    "endif"
    "let args = rest(!input!)"
    "case first(!input!):"
    "\"escape\":"
    " print(\"there's no way out\n\")"
    "\"look\":"
    " if (!args! == [\"around\"]) | (!args! == []):"
    "  print(\"you're in a small office. there's a desk, a whiteboard and a door here\n\")"
    " else:"
    "  if first(!args!) == \"at\":"
    "   let args = rest(!args!)"
    "  endif"
    "  if first(!args!) == \"the\":"
    "   let args = rest(!args!)"
    "  endif"
    "  if (!args! == [\"desk\"]):"
    "   print(\"the desk is bare\n\")"
    "   if contains(!inventory!,\"pen\"):"
    "   else:"
    "    print(\"you find a whiteboard pen in the drawer\n\")"
    "   endif"
    "  elseif (!args! == [\"whiteboard\"]) | (!args! == [\"white\",\"board\"]):"
    "   if !whiteboard_content! == \"\":"
    "    print(\"the whiteboard is blank\n\")"
    "   else:"
    "    print(\"on the whiteboard is written: '\" ++ \"$whiteboard_content$\" ++ \"'\n\")" ;; vulnerability is here
    "   endif"
    "  elseif !args! == [\"door\"]:"
    "   print(\"the door is locked. presumably it would lead to freedom if it could be opened\n\")"
    "  else:"
    "   print(\"I don't understand what you're trying to look at\n\")"
    "  endif"
    " endif"
    "\"open\":"
    " if !args! != []:"
    "  if first(!args!) == \"the\":"
    "   let args = rest(!args!)"
    "  endif"
    " endif"
    " if !args! == [\"door\"]:"
    "  print(\"the door is locked\n\")"
    " elseif !args! == [\"desk\"]:"
    "  if contains(!inventory!,\"pen\"):"
    "   print(\"the drawers of the desk are empty\n\")"
    "  else:"
    "   print(\"there's a whiteboard pen in one of the drawers\n\")"
    "  endif"
    " else:"
    "  print(\"I don't understand what you're trying to open\n\")"
    " endif"
    "\"get\" \"take\":"
    " if !args! != []:"
    "  if first(!args!) == \"the\":"
    "   let args = rest(!args!)"
    "  endif"
    " endif"
    " if (!args! == [\"pen\"]) | (!args! == [\"whiteboard\", \"pen\"]) | (!args! == [\"white\", \"board\", \"pen\"]):"
    "  if contains(!inventory!,\"pen\"):"
    "   print(\"you already have the pen\n\")"
    "  else:"
    "   let inventory = list_add_front(!inventory!,\"pen\")"
    "   print(\"you pick up the pen\n\")"
    "  endif"
    " elseif (!args! == [\"whiteboard\"]) | (!args! == [\"white\", \"board\"]):"
    "  print(\"the whiteboard is too big to pick up\n\")"
    " else:"
    "  print(\"I don't understand what you're trying to get\n\")"
    " endif"
    "\"read\":"
    " if !args! != []:"
    "  if first(!args!) == \"the\":"
    "   let args = rest(!args!)"
    "  endif"
    " endif"
    " if (!args! == [\"whiteboard\"]) | (!args! == [\"white\", \"board\"]):"
    "  print(\"on the whiteboard is written: '\" ++ !whiteboard_content! ++ \"'\n\")" ;;  not vulnerable
    " else:"
    "  print(\"you can't read that, it doesn't have any words\n\")"
    " endif"
    "\"write\":"
    " if contains(!inventory!,\"pen\"):"
    "  if !args! == []:"
    "   let message = \"\""
    "  else:"
    "   let message = implode(!args!,\" \")"
    "  endif"
    "  let whiteboard_content = !whiteboard_content! ++ \"\n\" ++ !message!"
    "  print(\"you write '\" ++ !message! ++ \"' on the whiteboard\n\")"
    " else:"
    "  print(\"you don't have a pen to write with\n\")"
    " endif"
    "\"use\":"
    " if !args! == []:"
    "  if first(!args!) == \"the\":"
    "   let args = rest(!args!)"
    "  endif"
    " endif"
    " if (first(!args!) == \"pen\") | (first(!args!) == \"whiteboard\") | (first(!args!) == \"white\"):"
    "  print(\"if you want to write on the whiteboard, use 'write <words to write>'. if you want to erase it, use 'erase whiteboard'\n\")"
    " else:"
    "  print(\"I don't understand what you're trying to use\n\")"
    " endif"
    "\"erase\" \"clean\":"
    " if (!args! == []) | (!args! == [\"whiteboard\"]) | (!args! == [\"white\", \"board\"]) | (!args! == [\"the\", \"whiteboard\"]) | (!args! == [\"the\", \"white\", \"board\"]):"
    "  let whiteboard_content = \"\""
    "  print(\"you clean off the whiteboard\n\")"
    " else:"
    "  print(\"I don't understand what you're trying to do\n\")"
    " endif"
    "\"quit\" \"give\":"
    " if (first(!input!) == \"quit\") | ((first(!input!) == \"give\") & (!args! == [\"up\"])):"
    "  give_up()"
    " else:"
    "  print(\"I didn't understand that. if you're trying to return to the main menu, use 'quit' or 'give up'\n\")"
    " endif"
    "default:"
    " print(\"I didn't understand that\n\")"
    "endcase"
    "goto 4"))

(provide level-2)
