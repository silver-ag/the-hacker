#lang racket

(define
  level-3
  '("print(\"LEVEL 3\n\")"
    "print(\"you come to lying on the floor of a strangely shaped underground cavern\n\")"
    "let inventory = []"
    "print(\"> \")"
    "let input = split_on(read(), \" \")"
    "if !input! == []:"
    " goto 3"
    "endif"
    "let args = rest(!input!)"
    "if !args! != []:"
    " if first(!args!) == \"at\":"
    "  let args = rest(!args!)"
    " endif"
    "endif"
    "if !args! != []:"
    " if first(!args!) == \"the\":"
    "  let args = rest(!args!)"
    " endif"
    "endif"
    "case first(!input!):"
    "\"escape\":"
    " print(\"the door is shut fast\n\")"
    "\"look\":"
    " if (!args! == [\"around\"]) | (!args! == []):"
    "  print(\"you are in a strangely shaped underground cavern. There's a heavy door set into the wall, and on the opposite side a stone obelisk sits at the edge of a lake that stretches off into the darkness\n\")"
    " elseif !args! == [\"door\"]:"
    "  print(\"the door is tightly sealed. runes above it proclaim: 'SPEAK, FRIEND, AND EXIT'\n\")"
    " elseif (!args! == [\"obelisk\"]) | (!args! == [\"statue\"]):"
    "  print(\"the obelisk bears an inscription: 'FOR THE USER TO HAVE CONTROL OF A VALUE DOES NOT NECESSARILY MEAN GIVING IT AS INPUT DIRECTLY. SOMETIMES IT IS ENOUGH TO TRICK THE SYSTEM INTO PRODUCING THE VALUE YOU WANT'\n\")"
    " elseif (!args! == [\"lake\"]) | (!args! == [\"water\"]):"
    "  print(\"it looks freezing. you can't see the other side\n\")"
    " endif"
    "\"say\" \"shout\" \"speak\" \"whisper\":"
    " let sentence = string_to_char_list(implode(!args!, \" \"))"
    " let garbled_sentence = []"
    " let garbled_sentence = list_add_back(!garbled_sentence!, ascii_code_to_char(((char_to_ascii_code(first(!sentence!)) + 13) % 95) + 32))"
    " let sentence = rest(!sentence!)"
    " if !sentence! != []:"
    "  goto 35"
    " endif"
    " let garbled_sentence = implode(!garbled_sentence!,\"\")"
    ;; vulnerability comes here if player can say something that'll get garbled into containing a "
    " print(\"the echo comes back garbled: '$garbled_sentence$' ... '$garbled_sentence$' ... '$garbled_sentence$' ...\n\")"
    "\"quit\" \"give\":"
    " if (first(!input!) == \"quit\") | ((first(!input!) == \"give\") & (!args! == [\"up\"])):"
    "  give_up()"
    " else:"
    "  print(\"I didn't understand that. if you're trying to return to the main menu, use 'quit' or 'give up'\n\")"
    " endif"
    "default:"
    " print(\"I didn't understand that\n\")"
    "endcase"
    "goto 3"))

(provide level-3)